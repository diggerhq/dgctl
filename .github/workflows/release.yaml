name: Release
on:
  push:
#    branches:
#      - "master"

jobs:
      - name: Get dgctl version
        id: get_version
        run: echo ::set-output name=version::$(grep version pyproject.toml | sed "s/version//g" | tr -d ' =\"')

      - name: Update release
        id: create_release
        uses: IsaacShelton/update-existing-release@v1.3.1
        with:
          release: "latest"
          tag: ${{ steps.get_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          replace: true

#      - name: release
#        uses: actions/create-release@v1
#        id: create_release
#        with:
#          draft: false
#          prerelease: true
#          release_name: "latest"
#          tag_name: ${{ steps.get_version.outputs.version }}
#        env:
#          GITHUB_TOKEN: ${{ github.token }}

  build-osx:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install dgctl==${{ needs.create-release.outputs.version }}
          pip install pyinstaller
          pyinstaller --onedir --onefile --noupx src/dgctl/dgctl.py
          ./dist/dgctl

      - name: Upload binary to artifact
        uses: actions/upload-artifact@v3
        with:
          name: dgctl-osx
          path: dist/dgctl

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - run: |
          python3 -m venv .venv
          .venv\Scripts\activate
          pip install dgctl
          pip install pyinstaller
          pyinstaller --onedir --onefile --noupx src\dgctl\dgctl.py
          dist\dgctl

      - name: Upload binary to artifact
        uses: actions/upload-artifact@v3
        with:
          name: dgctl-windows
          path: dist\dgctl.exe

  release-all:
    needs: [create-release, build-osx, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dgctl-osx

      - run: |
          zip -r dgctl-osx.zip dgctl

      - uses: actions/download-artifact@v3
        with:
          name: dgctl-windows

      - run: |
          zip -r dgctl-windows.zip dgctl.exe

      - name: Get dgctl version
        id: get_version
        run: echo ::set-output name=version::$(grep version pyproject.toml | sed "s/version//g" | tr -d ' =\"')

      - uses: IsaacShelton/update-existing-release@v1.3.1
        with:
          token: ${{ github.token }}
          release: "latest"
          tag: ${{ steps.get_version.outputs.version }}
          replace: true
          files: >
            dgctl-osx.zip
            dgctl-windows.zip
